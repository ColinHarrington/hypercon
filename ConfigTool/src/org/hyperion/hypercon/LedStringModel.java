package org.hyperion.hypercon;

import org.hyperion.hypercon.spec.ColorConfigModel;
import org.hyperion.hypercon.spec.DeviceConfigModel;
import org.hyperion.hypercon.spec.ImageProcessConfigModel;
import org.hyperion.hypercon.spec.LedFrameConstructionModel;
import org.hyperion.hypercon.spec.LedModel;
import org.hyperion.hypercon.spec.MiscConfigModel;
import org.mufassa.model.AbstractModel;
import org.mufassa.model.JsonComment;
import org.mufassa.model.ModelList;
import org.mufassa.model.json.Jsonizer;

@JsonComment(
		"Automatically generated configuration file for 'Hyperion daemon'\n" +
		"Generated by: HyperCon (The Hyperion deamon configuration file builder")
public class LedStringModel extends AbstractModel {
	/** The configuration of the output device */
	public final DeviceConfigModel mDevice = new DeviceConfigModel();
	
	/** The color adjustment configuration */
	public final ColorConfigModel mColor = new ColorConfigModel();

	/** THe configuration of the 'physical' led frame */
	public final LedFrameConstructionModel mLedFrameConfig = new LedFrameConstructionModel();
	
	/** The configuration of the image processing */
	public final ImageProcessConfigModel mProcessConfig = new ImageProcessConfigModel();
	
	/** The miscellaneous configuration (bootsequence, blackborder detector, etc) */
	public final MiscConfigModel mMiscConfig = new MiscConfigModel();

	/** The translation of the led frame construction and image processing to individual led configuration */
	public final ModelList<LedModel> leds = new ModelList<>();

	public static void main(String[] pArgs) {
		LedStringModel myModel = new LedStringModel();
		String modelJson = Jsonizer.serialize(myModel);
		
		System.out.println("Model: \n" + modelJson);
	}
}
